<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>iam-server-starter-all</artifactId>
	<packaging>jar</packaging>
	<name>IAM Service Starter All in One</name>
	<url>http://iam.wl4g.com</url>
	<parent>
		<groupId>com.wl4g</groupId>
		<artifactId>iam-server</artifactId>
		<version>3.0.0</version>
		<relativePath>../pom.xml</relativePath>
	</parent>
	<properties>
		<java.version>1.8</java.version>
		<maven-source-plugin.version>2.4</maven-source-plugin.version>
		<final.name>standalone-iam</final.name>
		<bootstrap-classname>com.wl4g.StandaloneIam</bootstrap-classname>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.wl4g</groupId>
				<artifactId>iam-bom</artifactId>
				<version>${project.parent.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>com.wl4g</groupId>
			<artifactId>iam-server-starter-data</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.wl4g</groupId>
					<artifactId>infra-integration-feign-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.wl4g</groupId>
					<artifactId>infra-integration-feign-springcloud</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.wl4g</groupId>
					<artifactId>infra-integration-springcloud-dubbo</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.wl4g</groupId>
			<artifactId>iam-server-starter-facade</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.wl4g</groupId>
					<artifactId>infra-integration-feign-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.wl4g</groupId>
					<artifactId>infra-integration-feign-springcloud</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.wl4g</groupId>
					<artifactId>infra-integration-springcloud-dubbo</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.wl4g</groupId>
			<artifactId>iam-server-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>com.wl4g</groupId>
					<artifactId>infra-integration-feign-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.wl4g</groupId>
					<artifactId>infra-integration-feign-springcloud</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.wl4g</groupId>
					<artifactId>infra-integration-springcloud-dubbo</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- If there is a compiler dependent annotation such as @HystrixCommand, our only purpose is to enable it to be compiled and packaged -->
		<dependency>
			<groupId>com.wl4g</groupId>
			<artifactId>infra-integration-feign-common</artifactId>
		</dependency>
		<!-- Test's -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<!-- [FIX]: testEngine with ID 'junit-vintage' failed to discover tests -->
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>${final.name}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<!-- When true and will check file encoding, causes the picture file copy to fail. -->
				<filtering>false</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*Tests.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>build:tar</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<finalName>${final.name}-${project.version}-bin</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>src/main/assemble/package.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>build:springjar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<mainClass>${bootstrap-classname}</mainClass>
							<finalName>${final.name}-${project.version}-bin</finalName>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>repackage</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>build:tar:docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<finalName>${final.name}-${project.version}-bin</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<descriptor>src/main/assemble/package.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- Usages examples: -->
                    <!-- export DOCKER_HOST=tcp://localhost:2375 -->
                    <!-- [build]: mvn -Pbuild:tar:docker -->
                    <!-- [push]: mvn -Pbuild:tar:docker -->
                    <!-- [push]: mvn -Pbuild:tar:docker dockerfile:build dockerfile:push -Ddockerfile.username=wl4g -Ddockerfile.password=xxx -->
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                        <version>1.4.13</version>
                        <executions>
                            <execution>
                                <id>default</id>
                                <goals>
                                    <goal>build</goal>
                                    <!-- <goal>push</goal> -->
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- see:https://github.com/spotify/dockerfile-maven/issues/154 -->
                            <contextDirectory>${project.basedir}</contextDirectory>
                            <dockerfile>${project.basedir}/build/docker/Dockerfile</dockerfile>
                            <repository>wl4g/${project.build.finalName}</repository>
                            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                            <tag>${project.version}</tag>
                            <readTimeoutMillis>60000</readTimeoutMillis>
                            <connectTimeoutMillis>20000</connectTimeoutMillis>
                            <buildArgs>
                                <APP_NAME>${project.build.finalName}</APP_NAME>
                                <APP_VERSION>${project.version}</APP_VERSION>
                                <APP_MAINCLASS>${bootstrap-classname}</APP_MAINCLASS>
                            </buildArgs>
                        </configuration>
                    </plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-deploy-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>