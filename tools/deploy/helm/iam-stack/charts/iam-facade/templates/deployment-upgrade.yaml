# Copyright (c) 2017 ~ 2025, the original author wangl.sir individual Inc,
# All rights reserved. Contact us James Wrong <983708408@qq.com>
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

{{- if not (empty .Values.image.upgradeTag) }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "app.name" . }}-upgrade
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ template "app.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ template "app.chart" . }}

spec:
  {{- if .Values.autoscaling.enabled }}
  {{- if eq .Values.governance.type "Istio" }}
  replicas: {{ ceil (mulf .Values.autoscaling.replicaTotal (divf .Values.governance.istio.ingress.http.canary.upgrade.weight 100)) }}
  {{- else }}
  replicas: {{ .Values.autoscaling.replicaTotal }}
  {{- end }}
  {{- else }}
  replicas: 1
  {{- end }}

  strategy:
    type: {{ .Values.updateStrategy.type }}
    {{- if eq .Values.updateStrategy.type "Recreate" }}
    rollingUpdate: null
    {{- end }}

  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "app.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}

  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.governance.type "Istio" }}
        sidecar.istio.io/inject: "true"
      {{- end }}
      labels:
        app.kubernetes.io/component: application
        app.kubernetes.io/name: {{ template "app.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        ## for canary governance labels.
        app.kubernetes.io/canaryVersion: {{ .Values.image.upgradeTag | default .Chart.AppVersion }}
    spec:
      {{- if .Values.initContainers }}
      initContainers:
      {{ toYaml .Values.initContainers | indent 8 }}
      {{- end }}

      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- end }}

      serviceAccountName: {{ template "app.name" . }}

      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}

      volumes:
      ## PreStart script.
      {{- if or (not (empty .Values.preStartScript)) (not (empty .Values.global.preStartScript)) }}
      - name: pre-start-volume
        configMap:
          name: {{ template "app.name" . }}-prestart-configmap
          items:
          {{- if not (empty .Values.preStartScript)}}
          - key: pre-start.config
            path: pre-start
          {{- else if not (empty .Values.global.preStartScript) }}
          - key: pre-start.config
            path: pre-start
          {{- end}}
      {{- end}}

      ## Agent configuration.
      {{- if or (not (empty .Values.agentConfigs)) (not (empty .Values.global.agentConfigs)) }}
      - name: agentconfig-volume
        configMap:
          name: {{ template "app.name" . }}-agent-configmap
          items:
          {{- if not (empty .Values.agentConfigs)}}
            {{- range $key, $value := .Values.agentConfigs}}
          - key: {{$key}}.config
            path: {{$key}}
            {{- end}}
          {{- else if not (empty .Values.global.agentConfigs) }}
            {{- range $key, $value := .Values.agentConfigs}}
          - key: {{$key}}.config
            path: {{$key}}
            {{- end}}
          {{- end}}
      {{- end}}

      ## Application core configuration.
      {{- if or (not (empty .Values.appConfigs)) (not (empty .Values.global.appConfigs)) }}
      - name: appconfig-volume
        configMap:
          name: {{ template "app.name" . }}-app-configmap
          items:
          {{- if not (empty .Values.appConfigs)}}
            {{- range $key, $value := .Values.appConfigs}}
          - key: {{$key}}.config
            path: {{$key}}
            {{- end}}
          {{- else if not (empty .Values.global.appConfigs) }}
            {{- range $key, $value := .Values.appConfigs}}
          - key: {{$key}}.config
            path: {{$key}}
            {{- end}}
          {{- end}}
      {{- end}}

      ## Data(transactions) directory.
      - name: appdata-volume
      {{- if not .Values.persistence.enabled }}
        emptyDir: {}
      {{- else if .Values.persistence.existingClaim }}
        persistentVolumeClaim:
        {{- with .Values.persistence.existingClaim }}
          claimName: {{ tpl . $ }}
        {{- end }}
      {{- end }}

      ## Logs directory.
      - name: applog-volume
      {{- if not .Values.persistence.enabled }}
        emptyDir: {}
      {{- else if .Values.persistence.existingClaim }}
        persistentVolumeClaim:
        {{- with .Values.persistence.existingClaim }}
          claimName: {{ tpl . $ }}
        {{- end }}
      {{- end }}

      restartPolicy: {{ .Values.restartPolicy | default "Always" }}

      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.upgradeTag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          #command: [ "/bin/sh", "-c", "env" ]
          ports:
            - name: http-api
              containerPort: {{ .Values.service.apiPort }}
              protocol: TCP
            - name: http-management
              containerPort: {{ .Values.service.managementPort }}
              protocol: TCP

          envFrom:
          {{- if or (not (empty .Values.envConfigs)) (not (empty .Values.global.envConfigs)) }}
          - configMapRef:
              name: {{ template "app.name" . }}-env-configmap
          {{- end }}

          volumeMounts:
          {{- if or (not (empty .Values.preStartScript)) (not (empty .Values.global.preStartScript)) }}
          - name: pre-start-volume
            mountPath: /etc/{{ template "app.name" . }}/
          {{- end }}
          {{- if or (not (empty .Values.appConfigs)) (not (empty .Values.global.appConfigs)) }}
          - name: appconfig-volume
            mountPath: /opt/apps/ecm/{{ template "app.name" . }}-package/{{ template "app.name" . }}-current/conf/
          {{- end }}
          - name: appdata-volume
            mountPath: /opt/apps/ecm/{{ template "app.name" . }}-package/{{ template "app.name" . }}-current/data/
          - name: applog-volume
            mountPath: /opt/apps/ecm/{{ template "app.name" . }}-package/{{ template "app.name" . }}-current/log/

          startupProbe:
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 30
            successThreshold: 1
            # tcpSocket:
            #   port: http-api
            httpGet:
              scheme: HTTP
              httpHeaders:
              - name: Accept
                value: "application/json"
              path: /actuator/health
              port: http-management

          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 5
            successThreshold: 1
            httpGet:
              scheme: HTTP
              path: /actuator/health
              port: http-management

          livenessProbe:
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 2
            successThreshold: 1
            httpGet:
              scheme: HTTP
              httpHeaders:
              - name: Accept
                value: "application/json"
              path: /actuator/health
              port: http-management

          {{- if .Values.resources.enabled }}
          resources:
            requests: {{- toYaml .Values.resources.requests | nindent 14 }}
            limits: {{- toYaml .Values.resources.limits | nindent 14 }}
          {{ end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- end }}
