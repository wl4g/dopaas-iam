# Copyright (c) 2017 ~ 2025, the original author wangl.sir individual Inc,
# All rights reserved. Contact us <jameswong1376@gmail.com, 983708408@qq.com>
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This parent charts will override the value of child charts.
# Global values see to: https://github.com/whmzsu/helm-doc-zh-cn/blob/master/chart_template_guide/subcharts_and_globals-zh_cn.md

## ----------------------------------- IamWeb Configuration -----------------------------------

## This is the spec definition of application instance deployed in Kubernetes.
iam-web:
  enabled: true
  image:
    repository: wl4g/iam-web
    baselineTag: latest
    upgradeTag: latest

  envConfigs:
    IAM_REDIS_NODES: "10.0.0.114:6379,10.0.0.114:6380,10.0.0.114:6381,10.0.0.114:7379,10.0.0.114:7380,10.0.0.114:7381"
    IAM_REDIS_PASSWORD: "zzx!@#$%"

  ## see:https://github.com/wl4g/iam/blob/master/server/server-starter-web/src/main/resources/
  appConfigs:
    # iam-web-etc-fat.yml: ""
    # iam-web-etc-uat.yml: ""
    iam-web-etc-pro.yml: |-
      spring:
        infra:
          support:
            jedis:
              passwd: ${IAM_REDIS_PASSWORD}
              connect-timeout: 10000
              max-attempts: 10
              # Redis server nodes, support standalone mode single node and cluster mode multiple nodes, separated by commas.
              nodes: ${IAM_REDIS_NODES:redis-0:6379,redis-1:6379,redis-2:6379,redis-3:6379,redis-4:6379,redis-5:6379}

    # iam-web-fat.yml: ""
    # iam-web-uat.yml: ""
    iam-web-pro.yml: |-
      spring:
        iam:
          cors:
            rules:
              '[/**]':
                allows-origins:
                  - https://${IAM_ZONE:wl4g.io}
                  - http://${IAM_ZONE:wl4g.io}
                  - https://*.${IAM_ZONE:wl4g.io}
                  - http://*.${IAM_ZONE:wl4g.io}
          login-uri: ${IAM_SCHEMA:https}://dopaas.${IAM_ZONE:wl4g.io}/#/login
          unauthorized-uri: /view/403.html
          success-endpoint: iam-web@https://iam.${IAM_ZONE:wl4g.io}/#/overview
          acl:
            secure: false # Turn off protection will trust any same intranet IP.
            allowIpRange: ${IAM_ACL_ALLOW:127.0.0.1}
            denyIpRange: ${IAM_ACL_DENY}
          captcha:
            #jigsaw:
              #source-dir: ${server.tomcat.basedir}/data/jigsaw-maternal
          sns: # SNS configuration.
            oauth2-connect-expire-ms: 60_000 # oauth2 connect processing expire time
            wechat-mp:
              app-id: yourappid
              app-secret: yoursecret
              redirect-url: https://iam.${IAM_ZONE:wl4g.io}${server.servlet.contextPath}/sns/wechatmp/callback
            wechat:
              app-id: yourappid
              app-secret: yoursecret
              redirect-url: https://iam.${IAM_ZONE:wl4g.io}${server.servlet.contextPath}/sns/wechat/callback
              href: https://${IAM_ZONE:wl4g.io}/${server.servlet.contextPath}/iam-jssdk/assets/css/iam-jssdk-wx.min.css
            qq:
              app-id: 101542056 # Public testing.
              app-secret: 46b2ba9fa24c2b973abc64ec898db3b4
              redirect-url: https://iam.${IAM_ZONE:wl4g.io}{server.servlet.contextPath}/sns/qq/callback

  governance:
    istio:
      ingress:
        ## see:https://istio.io/v1.14/docs/reference/config/networking/virtual-service/#HTTPRouteDestination
        domain: wl4g.io ## Top level 1 domain.

## ----------------------------------- IamFacade Configuration -----------------------------------

## This is the spec definition of iam-facade instance deployed in Kubernetes.
iam-facade:
  enabled: true
  image:
    repository: wl4g/iam-facade
    baselineTag: latest
    upgradeTag: latest

  envConfigs:
    IAM_REDIS_NODES: "10.0.0.114:6379,10.0.0.114:6380,10.0.0.114:6381,10.0.0.114:7379,10.0.0.114:7380,10.0.0.114:7381"
    IAM_REDIS_PASSWORD: "zzx!@#$%"

  appConfigs:
    ## see:https://github.com/wl4g/iam/blob/master/server/server-starter-facade/src/main/resources/iam-facade-etc-pro.yml
    # iam-facade-etc-fat.yml: ""
    # iam-facade-etc-uat.yml: ""
    iam-facade-etc-pro.yml: |-
      spring:
        infra:
          support:
            jedis:
              passwd: ${IAM_REDIS_PASSWORD}
              connect-timeout: 10000
              max-attempts: 10
              # Redis server nodes, support standalone mode single node and cluster mode multiple nodes, separated by commas.
              nodes: ${IAM_REDIS_NODES}

    # iam-facade-fat.yml: ""
    # iam-facade-uat.yml: ""
    # iam-facade-pro.yml: ""

## ----------------------------------- IamData Configuration -----------------------------------

## This is the spec definition of iam-facade instance deployed in Kubernetes.
iam-data:
  enabled: true
  image:
    repository: wl4g/iam-data
    baselineTag: latest
    upgradeTag: latest

  envConfigs:
    APP_ACTIVE: "uat"
    IAM_REDIS_NODES: "10.0.0.114:6379,10.0.0.114:6380,10.0.0.114:6381,10.0.0.114:7379,10.0.0.114:7380,10.0.0.114:7381"
    IAM_REDIS_PASSWORD: "zzx!@#$%"
    # IAM_DB_URL: "jdbc:mysql://mysql-iam-stack-data-headless.iam.svc.cluster.local:3306/iam?useunicode=true&serverTimezone=Asia/Shanghai&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&autoReconnect=true"
    IAM_DB_URL: "jdbc:mysql://10.0.0.114:3306/iam?useunicode=true&serverTimezone=Asia/Shanghai&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true&autoReconnect=true"
    IAM_DB_USER: "iam"
    IAM_DB_PASSWORD: "iam"

  ## see:https://github.com/wl4g/iam/blob/master/server/server-starter-data/src/main/resources/iam-data-etc-pro.yml
  appConfigs:
    # iam-data-etc-fat.yml: ""
    iam-data-etc-uat.yml: |-
      spring:
        # Spring datasource configuration.
        datasource:
          provider: com.zaxxer.hikari.HikariDataSource # com.alibaba.druid.pool.DruidDataSource
          driverClassName: com.mysql.cj.jdbc.Driver
          hikari:
            jdbcUrl: ${IAM_DB_URL}
            username: ${IAM_DB_USER}
            password: ${IAM_DB_PASSWORD}
            connectionTimeout: 30000
            idleTimeout: 600000
            initializationFailTimeout: 1
            minimumIdle: 10
            maxLifetime: 1800000
            maximumPoolSize: 100
            validationTimeout: 5000
            leakDetectionThreshold: 0

    # iam-data-etc-pro.yml: ""
    # iam-data-fat.yml: ""
    # iam-data-uat.yml: ""
    # iam-data-pro.yml: ""

## ----------------------------------- Global Dependents Components. -----------------------------------

global:
  mysql:
    enabled: true
    # if external MySQL is used, set "type" to "external" and fill the connection informations in "external" section
    provider: external
    internal: ## see:https://bitnami.com/stack/mysql/helm
      enabled: false
    external:
      host: "10.0.0.114"
      port: "3306"
      username: "iam"
      password: "iam"
      schema: "iam"

  postgresql:
    enabled: false
    # if external PostgreSQL is used, set "type" to "external" and fill the connection informations in "external" section
    provider: external
    internal: ## see:https://bitnami.com/stack/mysql/helm
      enabled: false
    external:
      host: "10.0.0.114"
      port: "5432"
      username: "iam"
      password: "iam"
      schema: "iam"

  redis:
    enabled: true
    # if external Redis is used, set "type" to "external" and fill the connection informations in "external" section
    provider: external
    internal: ## see:https://bitnami.com/stack/redis/helm
      enabled: false
    external:
      ## support redis and redis-cluster. e.g: <172.8.8.2,172.8.8.3...>
      ips: "10.0.0.114"
      ports: "6379,6380,6381,7379,7380,7381"
      password: "zzx!@#$%"

  zookeeper:
    enabled: true
    # if external Zookeeper is used, set "type" to "external" and fill the connection informations in "external" section.
    # For best performance it is recommended to use an external.
    provider: external
    internal: ## see:https://bitnami.com/stack/zookeeper/helm
      enabled: false
    external:
      # support zookeeper and zookeeper-cluster. e.g: <172.8.8.2,172.8.8.3...>
      ips: "10.0.0.114"
      ports: "2181"

  kafka:
    enabled: true
    # if external Kafka is used, set "type" to "external" and fill the connection informations in "external" section.
    # For best performance it is recommended to use an external.
    provider: external
    internal: ## see:https://bitnami.com/stack/kafka/helm
      enabled: false
    external:
      # support kafka and kafka-cluster. e.g: <172.8.8.2,172.8.8.3...>
      ips: "10.0.0.114"
      ports: "9092"

  mongodb:
    enabled: false
    # if external MongoDB is used, set "type" to "external" and fill the connection informations in "external" section.
    # For best performance it is recommended to use an external.
    provider: external
    internal: ## see:https://bitnami.com/stack/mongodb/helm
      enabled: false
    external:
      # support mongodb and mongodb-cluster. e.g: <172.8.8.2,172.8.8.3...>
      ips: "10.0.0.114"
      ports: "27017"

  elasticsearch:
    enabled: false
    # if external ElasticSearch is used, set "type" to "external" and fill the connection informations in "external" section.
    # For best performance it is recommended to use an external.
    provider: external
    internal: ## see:https://bitnami.com/stack/elasticsearch/helm
      enabled: false
    external:
      # support elasticsearch and elasticsearch-cluster. e.g: <172.8.8.2,172.8.8.3...>
      ips: "10.0.0.114"
      ports: "9300"

  solr:
    enabled: false
    # if external Apache Solr is used, set "type" to "external" and fill the connection informations in "external" section.
    # For best performance it is recommended to use an external.
    provider: external
    internal: ## see:https://bitnami.com/stack/solr/helm
      enabled: false
    external:
      # support solr and solr-cluster. e.g: <172.8.8.2,172.8.8.3...>
      ips: "10.0.0.114"
      ports: "8983"

  minio:
    enabled: true
    # if external MinIO is used, set "type" to "external" and fill the connection informations in "external" section.
    # For best performance it is recommended to use an external.
    provider: external
    internal: ## see:https://bitnami.com/stack/minio/helm
      enabled: false
    external:
      # support minio and minio-cluster. e.g: <172.8.8.2,172.8.8.3...>
      ips: "10.0.0.114"
      ports: "9000"

  trace:
    enabled: true
    # trace provider: jaeger or otel
    # jaeger should be 1.26+
    provider: jaeger
    # set sample_rate to 1 if you wanna sampling 100% of trace data; set 0.5 if you wanna sampling 50% of trace data, and so forth
    sample_rate: 1
    # namespace used to differentiate different harbor services
    # namespace:
    # attributes is a key value dict contains user defined attributes used to initialize trace provider
    # attributes:
    #   application: harbor
    jaeger:
      # jaeger supports two modes:
      #   collector mode(uncomment endpoint and uncomment username, password if needed)
      #   agent mode(uncomment agent_host and agent_port)
      endpoint: http://10.0.0.114:14268/api/traces
      # username:
      # password:
      # agent_host: hostname
      # export trace data by jaeger.thrift in compact mode
      # agent_port: 6831
    otel:
      endpoint: http://10.0.0.114:4318
      url_path: /v1/traces
      compression: false
      insecure: true
      timeout: 10s
