# Copyright (c) 2017 ~ 2025, the original author wangl.sir individual Inc,
# All rights reserved. Contact us <Wanglsir@gmail.com, 983708408@qq.com>
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

## This is the spec definition of application instance deployed in Kubernetes.
image:
  repository: wl4g/iam-facade
  baselineTag: latest
  upgradeTag: 
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## see:https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  pullSecrets:
  # - myRegistryKeySecretName

## It is recommended to have odd number of nodes in a cluster, otherwise the application cluster cannot be automatically healed in case of net-split.
autoscaling:
  enabled: true
  ## The total number of replicas for this application (greater than or equal to 0, default is 1).
  ## Note: if that when using istio grayscale (canary) deployment, it represents the 
  ## total number of baseline pods + upgrade pods, where the number of replicas is calculated
  ## according to the ceil of the product of the canary weight, for example:
  ## replicaTotal=1,baseline.weight=50,upgrade.weight=50, then: baseline.replica=1,upgrade.replica=1 
  ## is calculated by ceil.
  ## Note: this is only an approximation, the actual total may be slightly larger than this value.
  replicaTotal: 1

## The update strategy for deployments with persistent volumes(jobservice, registry
## and chartmuseum): "RollingUpdate" or "Recreate"
## Set it as "Recreate" when "RWM" for volumes isn't supported
updateStrategy:
  type: RollingUpdate

## The name of a secret in the same kubernetes namespace which contains values to
## be added to the environment (must be manually created)
## This can be useful for passwords and logins, etc.

# envFromSecret: "myapp-secrets"

## Additional deployment annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: /actuator/prometheus
  prometheus.io/port: "10108"

persistence:
  enabled: false
  size: 20Mi
  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  # storageClass: "-"
  accessMode: ReadWriteOnce
  ## Existing PersistentVolumeClaims
  ## The value is evaluated as a template
  ## So, for example, the name can depend on .Release or .Chart
  existingClaim: ""

## see:https://blogs.wl4g.com/archives/2969
resources:
  enabled: true
  requests:
    cpu: 100m
    memory: 256Mi
  limits:
    cpu: 900m
    memory: 2048Mi

## Containers that run before the creation of application containers. They can contain utilities or setup scripts.
initContainers: {}
  # - name: mysql-probe
  #   image: alpine
  #   command: ["sh", "-c", "for i in $(seq 1 300); do nc -zvw1 mysql 3306 && exit 0 || sleep 3; done; exit 1"]

podSecurityContext:
  enabled: true
  fsGroup: 1000
  fsGroupChangePolicy: Always
  runAsUser: 1000
  supplementalGroups:
    - 1000

containerSecurityContext:
  enabled: false
  runAsNonRoot: true
  runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}

envConfigs:
  JAVA_OPTS: "-Djava.awt.headless=true"
  APP_ACTIVE: "pro"
  SERVER_PORT: "18081"

agentConfig: ""

## see: ../../values.yaml#appConfigs
appConfigs:
  # application.yml: ""

service:
  ## Service type
  type: ClusterIP
  ## Application service port.
  apiPort: 18081
  ## Management port.
  managementPort: 10108
  ## Specify the nodePort(s) value for the LoadBalancer and NodePort service types.
  ## see:https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  nodePorts:
    api:
    management:
  ##
  ## Set the LoadBalancer service type to internal only.
  ## see:https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ## see:https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  loadBalancerIP:
  loadBalancerSourceRanges:
  #- 10.10.10.0/24
  ##
  ## Set the ExternalIPs
  ## see:https://kubernetes.io/zh/docs/concepts/services-networking/service/#external-ips
  externalIPs: []
  ## Provide any additional annotations which may be required. Evaluated as a template
  annotations: {}

governance:
  ## Service governance type.
  type: Istio # Options: Ingress|Istio, recommends using istio.
  ingress: # The legacy ingress.
    ## ingress for application api
    api:
      enabled: false
      ingressClassName: nginx
      annotations:
        kubernetes.io/ingress.class: nginx
        kubernetes.io/tls-acme: "true"
      path: /
      ## The default host are: <service>.<namespace>.svc.cluster.local
      customHosts:
        #- myapp.default.svc.cluster.local
      tls: []
    ##
    ## ingress for application management.
    management:
      enabled: false
      ingressClassName: nginx
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      path: /
      ## The default host are: <service>.<namespace>.svc.cluster.local
      customHosts:
        #- myapp.default.svc.cluster.local
      tls: []
  istio:
    ingress:
      ## see:https://istio.io/v1.14/docs/reference/config/networking/virtual-service/#HTTPRouteDestination
      domain: wl4g.io ## Top level one domain.
      customHosts: []
      http:
        ## The canary traffic governance, ie: rules for grouping pods.
        ## see:https://istio.io/v1.14/docs/reference/config/networking/virtual-service/#Destination
        ## see:https://istio.io/latest/zh/blog/2017/0.1-canary/
        canary:
          uriPrefix: /
          ## e.g. experiment only with internal users.
          cookieRegex: "^(.*?;)?(email=[^;]*@wl4g.io)(;.*)?$"
          ## The baseline version see to: .Values.image.baselineTag
          baseline:
            ## see:https://istio.io/v1.14/zh/docs/reference/config/networking/destination-rule/#LoadBalancerSettings-SimpleLB
            loadBalancer: ROUND_ROBIN # UNSPECIFIED|RANDOM|PASSTHROUGH|LEAST_REQUEST|ROUND_ROBIN|LEAST_CONN
            weight: 80 ## The ensure smooth splitting traffic, default value: 80%
          ## The upgrade version see to: .Values.image.upgradeTag
          upgrade:
            ## see:https://istio.io/v1.14/zh/docs/reference/config/networking/destination-rule/#LoadBalancerSettings-SimpleLB
            loadBalancer: ROUND_ROBIN # UNSPECIFIED|RANDOM|PASSTHROUGH|LEAST_REQUEST|ROUND_ROBIN|LEAST_CONN
            weight: 20 ## The ensure smooth splitting traffic, default value: 20%
        scheme: http # Options: http|https, recommends using https.
        tls:
          mode: SIMPLE # Options: SIMPLE|STRICT, recommends using STRICT.
        ## see:https://istio.io/v1.14/docs/reference/config/networking/virtual-service/#HTTPFaultInjection-Delay
        fault:
        #   delay:
        #     percentage:
        #       value: 0.1
        #     fixedDelay: 5s
        #   abort:
        #     percentage:
        #       value: 0.1
        #     httpStatus: 400
        ## see:https://istio.io/v1.14/zh/docs/reference/config/networking/virtual-service/#HTTPRetry
        retries:
         attempts: 5
         perTryTimeout: 3s
         #retryOn: gateway-error,connect-failure,refused-stream
        ## The circuit breaker limiter rules.
        ## see:https://istio.io/v1.14/zh/docs/reference/config/networking/destination-rule/#OutlierDetection
        outlierDetection:
          consecutive5xxErrors: 7
          interval: 5m
          baseEjectionTime: 15m
      ## see:https://istio.io/v1.14/docs/reference/config/networking/virtual-service/#TCPRoute
      tcp:
        enabled: false
        frontPort: 1883
        backendPort: 1883
    ## Depends external bare metal or VM services.
    ## see:https://istio.io/v1.14/docs/reference/config/networking/workload-entry/
    ## see:https://developer.aliyun.com/article/772279
    egress:
    - name: example-wx-payment
      classify: thirdparty-external-service
      version: v1
      location: MESH_EXTERNAL ## MESH_INTERNAL|MESH_EXTERNAL
      namespace: default
      serviceAccount: 
      customHosts:
      - api.mch.weixin.qq.com
      instancePorts:
      - protocol: HTTP
        targetPort: 8080
      - protocol: HTTP
        targetPort: 80
      - protocol: HTTPS
        targetPort: 443
      instanceAddresses:
      - 157.255.174.121 # or: api.mch.weixin.qq.com

## ================================================== COMMON Configuration ===============================================================

redis:
  # if external Redis is used, set "type" to "external" and fill the connection informations in "external" section
  type: external
  internal: ## see:https://bitnami.com/stack/redis/helm
    enabled: false
  external:
    ## support redis and redis-cluster.
    ## <redisIp0,redisIp1...>
    ips: "10.0.0.114"
    ## <redisPort0,redisPort1...>
    ports: "6379,6380,6381,7379,7380,7381"
    password: "zzx!@#$%"

# mysql:
#   # if external mysql is used, set "type" to "external" and fill the connection informations in "external" section
#   type: external
#   internal: ## see:https://bitnami.com/stack/mysql/helm
#     enabled: false
#   external:
#     host: "10.0.0.114"
#     port: "3306"
#     username: "iam"
#     password: "123456"
#     schema: "iam"

#kafka:
#  enabled: false
#  # if external Kafka is used, set "type" to "external" and fill the connection informations in "external" section.
#  # For best performance it is recommended to use an external.
#  type: external
#  internal: ## see:https://bitnami.com/stack/kafka/helm
#    enabled: false
#  external:
#    # support kafka and kafka-cluster.
#    # <kafka:port0,kafka:port1,kafka:port2,...>
#    brokerList: "10.0.0.114:9092"

trace:
  enabled: false
  # trace provider: jaeger or otel
  # jaeger should be 1.26+
  provider: jaeger
  # set sample_rate to 1 if you wanna sampling 100% of trace data; set 0.5 if you wanna sampling 50% of trace data, and so forth
  sample_rate: 1
  # namespace used to differentiate different harbor services
  # namespace:
  # attributes is a key value dict contains user defined attributes used to initialize trace provider
  # attributes:
  #   application: harbor
  jaeger:
    # jaeger supports two modes:
    #   collector mode(uncomment endpoint and uncomment username, password if needed)
    #   agent mode(uncomment agent_host and agent_port)
    endpoint: http://10.0.0.114:14268/api/traces
    # username:
    # password:
    # agent_host: hostname
    # export trace data by jaeger.thrift in compact mode
    # agent_port: 6831
  otel:
    endpoint: http://10.0.0.114:4318
    url_path: /v1/traces
    compression: false
    insecure: true
    timeout: 10s
